general {
    base_exp_dir = ./exp/CASE_NAME/t4d_lego
    recording = [
        ./,
        ./models
    ]
}

dataset {
    data_dir = ../data/CASE_NAME/
    render_cameras_name = cameras_sphere.npz
    object_cameras_name = cameras_sphere.npz
    g_nums = 1
}

train {
    learning_rate = 5e-4
    learning_rate_alpha = 0.1
    end_iter = 200000
    fine_level_iter = 5000
    downsample_iter = 7500

    batch_size = 512
    validate_resolution_level = 4
    warm_up_end = 2000
    warm_up_imgs = 50
    anneal_end = 0
    use_white_bkgd = False

    save_freq = 10000
    val_freq = 2000
    report_freq = 100

    igr_weight = 0.2
    tgr_weight = 0.0
    mask_weight = 0.3
    tv_weight = 0.01

    weighted_sample = True
    mask_color_loss = True
}

model {
    flow = True
    flow_tensor4d {
        lr_resolution = [128, 128, 32]
        hr_resolution = []
        feature_type = "4d"
        image_guide = False
    }
    flow_network {
        d_out = 3
        d_in = 3
        d_hidden = 256
        n_layers = 3
        skip_in = [1]
        min_emb = 0
        max_emb = 8
        t_emb = 6
        bias = 0.5
        geometric_init = False
        weight_norm = True
    }

    mask3d {
        mask_type = "bounding"
    }

    tensor4d {
        lr_resolution = [128, 32]
        hr_resolution = [512, 16]
        feature_type = "3d"
        image_guide = False
    }

    sdf_network {
        d_out = 257
        d_in = 3
        d_hidden = 256
        n_layers = 3
        skip_in = [1]
        min_emb = 0
        max_emb = 8
        t_emb = -1
        bias = 0.5
        geometric_init = True
        weight_norm = True
    }

    variance_network {
        init_val = 0.3
    }

    rendering_network {
        d_feature = 256
        mode = idr
        d_in = 9
        d_out = 3
        d_hidden = 256
        n_layers = 3
        weight_norm = True
        multires_view = 3
        squeeze_out = True
    }

    neus_renderer {
        n_samples = 64
        n_importance = 64
        n_outside = 0
        up_sample_steps = 1     # 1 for simple coarse-to-fine sampling
        perturb = 1.0
    }
}
